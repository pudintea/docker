


WALIDUMAR
=========
#> nano docker-compose.yml

version: '3.3'
services:
  db:
    image: mysql:5.7
    volumes:
       - db_data:/var/lib/mysql
    restart: always
    environment:
       MYSQL_ROOT_PASSWORD: somewordpress
       MYSQL_DATABASE: wordpress
       MYSQL_USER: wordpress
       MYSQL_PASSWORD: wordpress

  wordpress:
    depends_on:
     - db
    image: wordpress:latest
    ports:
      - "8080:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    volumes:
     db_data: {}


========================================================================

MUSAAMIN
=========
#> nano docker-compose.yml

version: "3.8"
services:
  db:
    image: mariadb:latest
    volumes:
      - ./db_data:/var/lib/mysql
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: secret
      MARIADB_DATABASE: db_wp
      MARIADB_USER: user_wp
      MARIADB_PASSWORD: secret_wp
    
  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    volumes:
      - ./wp_data:/var/www/html
    ports:
      - "8080:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: user_wp
      WORDPRESS_DB_PASSWORD: secret_wp
      WORDPRESS_DB_NAME: db_wp
volumes:
  db_data: {}
  wordpress_data: {}


============================================================================

Niagahoster
===========
version: "3" 
# Defines which compose version to use
services:
  # Services line define which Docker images to run. In this case, it will be MySQL server and WordPress image.
  db:
    image: mysql:5.7
    # image: mysql:5.7 indicates the MySQL database container image from Docker Hub used in this installation.
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: MyR00tMySQLPa$$5w0rD
      MYSQL_DATABASE: MyWordPressDatabaseName
      MYSQL_USER: MyWordPressUser
      MYSQL_PASSWORD: Pa$$5w0rD
      # Previous four lines define the main variables needed for the MySQL container to work: database, database username, database user password, and the MySQL root password.
  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    restart: always
    # Restart line controls the restart mode, meaning if the container stops running for any reason, it will restart the process immediately.
    ports:
      - "8000:80"
      # The previous line defines the port that the WordPress container will use. After successful installation, the full path will look like this: http://localhost:8000
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: MyWordPressUser
      WORDPRESS_DB_PASSWORD: Pa$$5w0rD
      WORDPRESS_DB_NAME: MyWordPressDatabaseName
# Similar to MySQL image variables, the last four lines define the main variables needed for the WordPress container to work properly with the MySQL container.
    volumes:
      ["./:/var/www/html"]
volumes:
  mysql: {}


=============================================
Yang saya Gunakan

version: "3" 
services:
  db-wp:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: MyR00tMySQLPa$$5w0rD
      MYSQL_DATABASE: MyWordPressDatabaseName
      MYSQL_USER: MyWordPressUser
      MYSQL_PASSWORD: Pa$$5w0rD
    volumes:
      ["./db_data:/var/lib/mysql"]
  wordpress:
    depends_on:
      - db-wp
    image: wordpress:latest
    restart: always
    ports:
      - "127.0.0.1:8000:80"
    environment:
      WORDPRESS_DB_HOST: db-wp:3306
      WORDPRESS_DB_USER: MyWordPressUser
      WORDPRESS_DB_PASSWORD: Pa$$5w0rD
      WORDPRESS_DB_NAME: MyWordPressDatabaseName
    volumes:
      ["./wp_data:/var/www/html"]



=============================================
JALANKAN CONTAINER
#> docker-compose up -d

Shutdown dan Cleanup
===================
Untuk menghentikan dan menghapus container dan network digunakan command down.
#> docker-compose down    
Untuk menghapus container, network, dan volumenya (file wordpress dan database) tambahkan opsi â€“volumes.
#> docker-compose down --volumes 

================================================== PUDIN.MY.ID ========================================
